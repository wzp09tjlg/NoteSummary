基本的数据结果

1.数组
数组是存放同一类数据，大小在定义开始就需要确定，并且不能在以后的使用过程中更改数组的分配内存的大小。
数组存储数据在内存中是分配的连续的存储空间，数组访问数据是依据数组的下边来进行访问的。

2.list<链表>
list是也是存放的同一类数据，在使用过程中 不需要动态指定大小。在使用过程中存放的数据是需要动态的以开辟一个内存空间来存储
数据，list底层实现是一个链表，分配的内存空间不一定是连续的。

1&2 数组和链表的比较(比较首先是说下各自的特点：底层实现，存储方式，访问速度，然后再就是两者区别，各自优点和缺点)
a.数组是必须在一开始就分配固定内存的空间，大小是固定的，链表是动态分配内存空间，大小不固定。
b.数组因为在内存中分配的空间是连续的地址空间，所以访问速度很快。链表分配的内存空间不一定是连续的，所以访问起来速度没有数组快。

3.链表的基本操作
a.定义基本结构 b.添加数据项 c.移除数据项 d.遍历数据项 e.获取某一项  f.删除某一项 g.翻转操作
常见的链表是：单向链表 双向链表 循环链表

4.队列
队列的数据结构时一种按照先进先出的规则来实现的逻辑数据结构。底层实现由由数组和链表的方式来实现。

5.栈
栈是一种只能从一个地方(栈顶)进栈操作和出栈操作的数据结构。
常见的栈处理有：入栈操作 出栈操作 获取栈顶元素

4&5常用在地方：
队列：用在消息队列中，线程池中存放请求的访问中
栈：管理Activity页面中，jvm当中对方法的调用从存储中(递归调用中)

6.java 中的数据结构 集合 和 map(图)
Collection 接口，实现这个接口的分为两个接口 list 和 set
list：接口下有ArrayList LikedList Vector
Set： hashTable,treeSet

map 接口，实现这个接口的数据结构有hashMap ,linkedMap treeMap.

7.树
一种表示层次关系的数据结构，因为倒置像一棵树，所以称之为树
(数据链表 是一对一的关系，树是一对多的关系，图是多对多的关系)
树的定义：有一个根节点，按照一对多的关系，由根节点开始派生出子节点。子节点也能作为开始节点派生子节点。子节点数不固定。
特别的：当所有的开始节点最多只有两个子节点的数，我们称之为二叉树。
树的遍历：前序遍历 中序遍历 后续遍历(思想)
树的遍历规则：Node Left Right
前序遍历 Node->Left->Right
中序遍历 Left->Node->Right
后续遍历 Left>Right->Node

8.图
是一种多对多的关系，图中元素是以边作为两者的连接，如果两个元素之间有联系，那么就会存在一条边。两个元素没有联系，那么就不存在一条边。
图分为有向图和无向图。具体的表现形式是以堆成矩阵的形式来表现的。
